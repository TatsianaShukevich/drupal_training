<?php

/**
 * Implements hook_menu
 * @return array
 */
function training_menu(){
  $menu = array();
  $menu['training/menu'] = array(
    'title' => 'Training Landing Page',
    'description' => 'This page is Landing Page',
    'page callback' => 'training_page_html',
    'access callback' => TRUE,
    'file' => 'training.pages.inc',
    'expanded' => true,
  );
  $menu['training/menu/custom_access '] = array(
    'title' => 'Custom Access Menu Item',
    'description' => 'This page is accessible to authenticated users only',
    'page callback' => 'training_page_html',
    'access callback' => 'training_custom_access',
    'access arguments' => array('authenticated user'),
    'file' => 'training.pages.inc',
  );
  $menu['training/menu/permissioned '] = array(
    'title' => 'Permissioned Menu Item',
    'description' => 'This page is accessible to permissioned users only',
    'page callback' => 'training_page_html',
    'access arguments' => array('train', ),
    'file' => 'training.pages.inc',
  );
  $menu['training/menu/callback'] = array(
    'title' => 'Callback Menu Item',
    'page callback' => 'training_menu_callback',
    'access callback' => TRUE,
    'file' => 'training.pages.inc',
    'type' => MENU_CALLBACK,
  );

  $menu['training/menu/tabs'] = array(
    'title' => 'Tabs Pages',
    'page callback' => 'training_menu_tabs_default',
    'access callback' => TRUE,
    'file' => 'training.pages.inc',
  );
  $menu['training/menu/tabs/first'] = array(
    'title' => 'Tabs',
    'access callback' => TRUE,
    'file' => 'training.pages.inc',
    'weight' => -1,
    'type' => MENU_DEFAULT_LOCAL_TASK,
  );
  $menu['training/menu/tabs/second'] = array(
    'title' => 'Second',
    'page callback' => 'training_menu_tabs',
    'page arguments' => array(3, ),
    'access callback' => TRUE,
    'file' => 'training.pages.inc',
    'weight' => 0,
    'type' => MENU_LOCAL_TASK,
  );
  $menu['training/menu/tabs/third'] = array(
    'title' => 'Third',
    'page callback' => 'training_menu_tabs',
    'page arguments' => array(3, ),
    'access callback' => TRUE,
    'file' => 'training.pages.inc',
    'weight' => 1,
    'type' => MENU_LOCAL_TASK,
  );
  $menu['training/menu/tabs/fourth'] = array(
    'title' => 'Fourth',
    'page callback' => 'training_menu_tabs',
    'page arguments' => array(3, ),
    'access callback' => TRUE,
    'file' => 'training.pages.inc',
    'weight' => 2,
    'type' => MENU_LOCAL_TASK,
  );
  $menu['training/menu/tabs/default/first'] = array(
    'title' => 'Default secondary tab',
    'access callback' => TRUE,
    'file' => 'training.pages.inc',
    'tab_parent' => 'training/menu/tabs/first',
    'type' => MENU_DEFAULT_LOCAL_TASK,
  );
  $menu['training/menu/tabs/default/second'] = array(
    'title' => 'second',
    'access callback' => TRUE,
    'file' => 'training.pages.inc',
    'tab_parent' => 'training/menu/tabs/first',
    'type' => MENU_LOCAL_TASK,
  );
  $menu['training/menu/tabs/default/third'] = array(
    'title' => 'third',
    'access callback' => TRUE,
    'file' => 'training.pages.inc',
    'tab_parent' => 'training/menu/tabs/first',
    'type' => MENU_LOCAL_TASK,
  );
  $menu['training/menu/arguments/%/%'] = array(
    'title' => 'Menu arguments',
    'page callback' => 'training_menu_arguments',
    'page arguments' => array(3,4 ),
    'access callback' => TRUE,
    'file' => 'training.pages.inc',
  );
  $menu['training/menu/placeholder/%/display'] = array(
    'title' => 'Menu argument before display',
    'page callback' => 'training_menu_arguments_display',
    'page arguments' => array(3 ),
    'access callback' => TRUE,
    'file' => 'training.pages.inc',
  );
  $menu['training/menu/default_arg/%digit'] = array(
    'title' => 'Menu preprocessing argument',
    'page callback' => 'training_menu_arguments_preprocessing',
    'page arguments' => array(3 ),
    'access callback' => TRUE,
    'file' => 'training.pages.inc',
  );
  $menu['training/menu/title'] = array(
    'title callback' => 'training_menu_title_callback',
    'access callback' => TRUE,
    'file' => 'training.pages.inc',
  );
  $menu['training/menu/main'] = array(
    'title' => 'Item in main menu',
    'menu_name' => 'main-menu',
    'access arguments' => array('train', ),
    'file' => 'training.pages.inc',
  );

  return $menu;
}

/**
 * Check access for page Custom Access Menu Item.
 * $user - a global variable keeps the user basic information about the current user.
 * $role_name - param contents role authenticated user
 * @return bool
 */
function training_custom_access($role_name){
  global $user;
  return in_array($role_name, $user->roles);
}

/**
 * Preprocessing argument. Returns the new value of the argument
 * @param $arg - argument in URL training/menu/default_arg/%digit
 * @return string
 */

function digit_load($arg){
  switch ($arg) {
    case 1:
      $arg = 'one';
      break;
    case 2:
      $arg = 'two';
      break;
    case 3:
      $arg = 'three';
      break;
    case 99:
      $arg = 'Almost there';
      break;
    default:
      $arg = NULL;
  }
  return $arg;
}

/**
 * Returns a dynamic page title
 * string $user_name - contents user name
 * @return string
 */

function training_menu_title_callback(){
  global $user;
  isset($user->name)?$user_name=$user->name:$user_name='anonymous';
  return 'Dynamic title: username= '.$user_name;
}


/**
 * Implements hook_permission()
 * array $permission - array of permission
 * @return array
 */
 function training_permission(){
  $permission = array(
    'train' => array(
      'title' => 'Access protected menu example',
      'description' => 'Use this to control access to page Permissioned Menu Item of training module',
    ),
  );

  return $permission;
}
